//
//  SwiftlyImageLoaderConfiguration.swift
//  SwiftlyImageLoader
//
//  Created by Mohsin Khan on 02/04/25.
//

import Foundation

public struct SwiftlyImageLoaderConfiguration: @unchecked Sendable {
    
    /// Automatically cancels any existing image download task for the same URL when a new one is initiated.
    /// This is especially helpful in table or collection views where views are reused.
    public var cancelPreviousLoadForSameURL: Bool
    
    /// Enables the ability to cancel all ongoing image requests in bulk using `ImageLoader.cancelAll()`.
    /// Useful when dismissing screens or stopping a bulk image loading session.
    public var enableGlobalCancellation: Bool
    
    /// Controls the level of logging output generated by the loader.
    public var logLevel: LogLevel

    /// Initializes the configuration object.
    /// - Parameters:
    ///   - autoCancelOnReuse: Cancel any existing task for the same URL before starting a new one.
    ///   - enableBatchCancelation: Enable global cancellation across all tasks.
    ///   - logLevel: Logging verbosity.
    public init(autoCancelOnReuse: Bool = true,
                enableBatchCancelation: Bool = true,
                logLevel: LogLevel = .basic) {
        self.cancelPreviousLoadForSameURL = autoCancelOnReuse
        self.enableGlobalCancellation = enableBatchCancelation
        self.logLevel = logLevel
    }
    
    /// Default configuration with reuse cancellation, batch cancelation, and basic logging enabled.
    public static let `default` = SwiftlyImageLoaderConfiguration()
}
